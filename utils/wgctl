#!/usr/bin/env bash
set -euo pipefail

# ===================================
# Colors
# ===================================
RED='\e[0;31m'
GREEN='\e[0;32m'
YELLOW='\e[1;33m'
BLUE='\e[0;34m'
MAGENTA='\e[0;35m'
NC='\e[0m' # No Color

# ===================================
# GLOBAL CONFIGURATION
# ===================================
SCRIPT_NAME="$(basename "$0")"
SCRIPT_VERSION="1.0.0"
DEBUG=false
SILENT=false

# ===================================
# DEFAULT CONFIGURATION
# ===================================
WG_CONF_DIR="/etc/wireguard"
WG_CMD="wg-quick"

# ===================================
# Logging
# ===================================
log() {
    if [ "$SILENT" != "true" ]; then
        echo -e "${BLUE}==> $1${NC}"
    fi
}
warn() {
    if [ "$SILENT" != "true" ]; then
        echo -e "${YELLOW}⚠️  $1${NC}" >&2
    fi
}
success() {
    if [ "$SILENT" != "true" ]; then
        echo -e "${GREEN}✓ $1${NC}"
    fi
}
abort() {
    if [ "$SILENT" != "true" ]; then
        echo -e "${RED}✗ $1${NC}" >&2
    fi
    exit 1
}
debug() {
    if [ "$DEBUG" = "true" ]; then
        echo -e "${MAGENTA}🐞 DEBUG: $1${NC}"
    fi
}

# ========================
# UTILITIES
# ========================
require_cmd() {
    command -v "$1" >/dev/null 2>&1 || abort "'$1' is not installed or not in PATH."
}

function list_interfaces() {
    find "$WG_CONF_DIR" -type f -name "*.conf" -exec basename {} .conf \;
}

function select_interface() {
    local interfaces
    interfaces=$(list_interfaces)
    if [[ -z "$interfaces" ]]; then
        abort "No WireGuard interfaces found in $WG_CONF_DIR"
    fi
    echo "$interfaces" | fzf --prompt="Select WireGuard interface: " --height=10 --border
}

# ===================================
# COMMANDS
# ===================================
function cmd_help() {
    cat <<EOF
Usage: $SCRIPT_NAME <command> [options]

Commands:
  list                List available WireGuard interfaces
  on                  Bring up an interface (interactive or specify)
  off                 Bring down an interface (interactive or specify)
  help                Show this help message
  version             Show script version

Options:
  -i, --interface     Specify interface (e.g., wg0)

Examples:
  $SCRIPT_NAME list
  $SCRIPT_NAME on --interface wg0
  $SCRIPT_NAME off
EOF
}

function cmd_list() {
    log "Available WireGuard interfaces:"
    list_interfaces || echo "None found."
}

function cmd_up() {
    local iface="${INTERFACE:-}"
    [[ -z "$iface" ]] && iface=$(select_interface)
    sudo $WG_CMD up "$iface"
    success "Interface '$iface' is up."
}

function cmd_down() {
    local iface="${INTERFACE:-}"
    [[ -z "$iface" ]] && iface=$(select_interface)
    sudo $WG_CMD down "$iface"
    success "Interface '$iface' is down."
}

# ===================================
# MAIN LOGIC
# ===================================
main() {
    require_cmd "$WG_CMD"
    require_cmd "fzf"

    local cmd="${1:-}"
    shift || true

    while [[ $# -gt 0 ]]; do
        case "$1" in
        -i | --interface)
            INTERFACE="$2"
            shift
            ;;
        --*)
            abort "Unknown option: $1"
            ;;
        *)
            [[ -z "$cmd" ]] && cmd="$1" || abort "Multiple commands not allowed"
            ;;
        esac
        shift
    done

    case "$cmd" in
    list) cmd_list ;;
    on) cmd_up ;;
    off) cmd_down ;;
    help | "")
        cmd_help
        ;;
    version)
        cmd_version
        ;;
    *)
        abort "Unknown command: $cmd. Use '$SCRIPT_NAME help' to list available commands."
        ;;
    esac
}

main "$@"
