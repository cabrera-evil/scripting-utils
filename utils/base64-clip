#!/usr/bin/env bash
set -euo pipefail

# ===================================
# GLOBAL CONFIGURATION
# ===================================
SCRIPT_NAME="$(basename "$0")"
SCRIPT_VERSION="1.0.0"
DEBUG=false
SILENT=false

# ===================================
# UTILITIES
# ===================================

abort() {
    echo "ERROR: $1" >&2
    exit 1
}

info() {
    echo "INFO: $1"
}

success() {
	echo "SUCCESS: $1"
}

require_cmd() {
    command -v "$1" >/dev/null 2>&1 || abort "'$1' is not installed or not in PATH."
}

# ===================================
# COMMANDS
# ===================================

copy_file_to_clipboard() {
    local file="$1"

    [[ ! -f "$file" ]] && {
        abort "File not found: $file" >&2
    }

    local encoded
    encoded=$(base64 "$file")

    if command -v xclip &>/dev/null; then
        echo "$encoded" | xclip -selection clipboard
        success "Copied to clipboard via xclip"
    elif command -v pbcopy &>/dev/null; then
        echo "$encoded" | pbcopy
        success "Copied to clipboard via pbcopy"
    else
        abort "No clipboard utility found. Install xclip or pbcopy."
    fi
}

cmd_version() {
    echo "$SCRIPT_NAME version $SCRIPT_VERSION"
}

# ===================================
# MAIN LOGIC
# ===================================

show_help() {
    cat <<EOF
Usage: $SCRIPT_NAME <command> [options]

Commands:
  copy                  Encode a file to Base64 and copy it to clipboard
  help                  Show this help message
  version               Show script version

Options:
  --file <FILE>         File to encode (required)

Examples:
  $SCRIPT_NAME copy --file /path/to/file.txt
EOF
}

main() {
    local cmd="${1:-}"
    shift || true

    local FILE_PATH=""

    while [[ $# -gt 0 ]]; do
        case "$1" in
        --file)
            FILE_PATH="$2"
            ;;
        --*)
            abort "Unknown option: $1"
            ;;
        *)
            [[ -z "$cmd" ]] && cmd="$1" || abort "Multiple commands not allowed"
            ;;
        esac
        shift
    done

    case "$cmd" in
    copy)
        [[ -z "$FILE_PATH" ]] && {
            abort "--file is required"
        }
        copy_file_to_clipboard "$FILE_PATH"
        ;;
    help | "")
        show_help
        ;;
    version)
        cmd_version
        ;;
    *)
        abort "Unknown command: $cmd. Use '$SCRIPT_NAME help' to list available commands."
        ;;
    esac
}

main "$@"
