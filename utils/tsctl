#!/usr/bin/env bash

set -euo pipefail

# -------------------------
# Defaults
# -------------------------
TAILSCALE_CMD="tailscale"
TAILSCALED_CMD="tailscaled"
RESOLV_CONF="/etc/resolv.conf"

# -------------------------
# Helper Functions
# -------------------------
usage() {
    cat <<EOF
Usage: $(basename "$0") [command] [options]

Commands:
  status                   Show Tailscale status
  up                       Bring Tailscale up (supports --exit-node <IP|hostname>, --advertise-exit-node)
  down                     Bring Tailscale down and clean routes/DNS
  funnels                  List active Funnels
  serves                   List active Serve configurations
  help                     Show this help message

Options for 'up':
  --exit-node <IP|hostname>     Use a remote exit node
  --advertise-exit-node         Advertise this machine as an exit node

Examples:
  $0 up
  $0 up --exit-node 100.100.100.100
  $0 up --advertise-exit-node
EOF
    exit 1
}

require_cmd() {
    command -v "$1" >/dev/null 2>&1 || {
        echo "ERROR: '$1' is not installed."
        exit 1
    }
}

clean_dns_routes() {
    echo "INFO: Cleaning routes and DNS..."
    sudo bash -c "cat > $RESOLV_CONF <<'EOF'
nameserver 1.1.1.1
nameserver 1.0.0.1
EOF"
    echo "SUCCESS: DNS cleaned."
}

setup_tailscale_dns() {
    echo "INFO: Setting up Tailscale DNS..."
    sudo bash -c "cat > $RESOLV_CONF <<'EOF'
nameserver 100.100.100.100
search tail0518ca.ts.net
EOF"
    echo "SUCCESS: Tailscale DNS setup done."
}

# -------------------------
# Commands
# -------------------------
cmd_status() {
    sudo $TAILSCALE_CMD status
}

cmd_up() {
    local exit_node=""
    local advertise_exit_node=false

    # Parse flags for up
    while [[ $# -gt 0 ]]; do
        case "$1" in
        --exit-node)
            exit_node="$2"
            shift 2
            ;;
        --advertise-exit-node)
            advertise_exit_node=true
            shift
            ;;
        *)
            echo "ERROR: Unknown option: $1"
            usage
            ;;
        esac
    done

    local up_cmd="sudo $TAILSCALE_CMD up"
    [[ -n "$exit_node" ]] && up_cmd="$up_cmd --exit-node=$exit_node --accept-routes"
    [[ "$advertise_exit_node" == true ]] && up_cmd="$up_cmd --advertise-exit-node"

    echo "INFO: Running '$up_cmd'"
    eval "$up_cmd"

    setup_tailscale_dns
}

cmd_down() {
    sudo $TAILSCALED_CMD --cleanup >/dev/null 2>&1 || echo "INFO: Tailscaled cleanup done."
    sudo $TAILSCALE_CMD down >/dev/null 2>&1 || echo "INFO: Tailscale was already down."
    clean_dns_routes
}

cmd_funnels() {
    echo "INFO: Listing active Funnels:"
    sudo $TAILSCALE_CMD funnel list || echo "No Funnels found."
}

cmd_serves() {
    echo "INFO: Listing active Serve configurations:"
    sudo $TAILSCALE_CMD serve status || echo "No Serve configurations found."
}

# -------------------------
# Main
# -------------------------
require_cmd "ip"

COMMAND="${1:-help}"
shift || true

case "$COMMAND" in
status) cmd_status ;;
up) cmd_up "$@" ;;
down) cmd_down ;;
funnels) cmd_funnels ;;
serves) cmd_serves ;;
help | *) usage ;;
esac
