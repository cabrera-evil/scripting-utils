#!/usr/bin/env bash
set -euo pipefail

# ===================================
# COLORS
# ===================================
RED='\e[0;31m'
GREEN='\e[0;32m'
YELLOW='\e[1;33m'
BLUE='\e[0;34m'
MAGENTA='\e[0;35m'
NC='\e[0m'

# ===================================
# GLOBAL CONFIGURATION
# ===================================
SCRIPT_NAME="$(basename "$0")"
SCRIPT_VERSION="1.0.0"
DEBUG=false
SILENT=false

# ===================================
# DEFAULT CONFIGURATION
# ===================================
WALLPAPER_FILE="$HOME/.config/wallpaper"
WALLPAPER_DIR="$HOME/Pictures/Wallpapers"

# ===================================
# LOGGING
# ===================================
log() {
	if [ "$SILENT" != "true" ]; then
		echo -e "${BLUE}==> $1${NC}"
	fi
}
warn() {
	if [ "$SILENT" != "true" ]; then
		echo -e "${YELLOW}⚠️  $1${NC}" >&2
	fi
}
success() {
	if [ "$SILENT" != "true" ]; then
		echo -e "${GREEN}✓ $1${NC}"
	fi
}
abort() {
	if [ "$SILENT" != "true" ]; then
		echo -e "${RED}✗ $1${NC}" >&2
	fi
	exit 1
}
debug() {
	if [ "$DEBUG" = "true" ]; then
		echo -e "${MAGENTA}🐞 DEBUG: $1${NC}"
	fi
}

# ===================================
# UTILITIES
# ===================================
require_cmd() {
	command -v "$1" >/dev/null 2>&1 || abort "'$1' is not installed or not in PATH."
}

apply_wallpaper() {
	local img="$1"
	[[ ! -f "$img" ]] && abort "Image not found: $img"
	log "Setting wallpaper: $img"
	feh --bg-scale "$img"
	echo "$img" >"$WALLPAPER_FILE"
	success "Wallpaper applied and saved."
}

choose_wallpaper() {
	require_cmd fzf
	require_cmd feh
	require_cmd chafa
	find "$WALLPAPER_DIR" -type f \( -iname '*.jpg' -o -iname '*.png' \) |
		fzf --preview="chafa --symbols=block --fill=block --size=60x25 --format=ansi {}" \
			--preview-window=right:60% |
		tee /dev/tty |
		xargs -r feh --bg-scale
}

# ===================================
# COMMANDS
# ===================================
cmd_help() {
	cat <<EOF
Usage: $SCRIPT_NAME <command>

Commands:
  set <image>        Set specific wallpaper and save it
  choose             Launch fzf selector to pick a wallpaper (with preview)
  restore            Restore previously used wallpaper
  version            Show script version
  help               Show this help message

Configuration:
  - Wallpaper dir:  $WALLPAPER_DIR
  - Persist file:   $WALLPAPER_FILE

Preview Methods (in order of preference):
  1. chafa (terminal graphics)
  2. catimg (alternative terminal graphics)
  3. viu (rust-based image viewer)
  4. imgcat (iTerm2 support)
  5. Basic file info

Keybindings in chooser:
  - Ctrl-P: Toggle preview
  - Enter: Select wallpaper
  - Esc: Cancel

EOF
}

cmd_set() {
	local img="${1:-}"
	[[ -z "$img" ]] && abort "Missing image path."
	apply_wallpaper "$img"
}

cmd_choose() {
	require_cmd fzf
	require_cmd feh

	[[ ! -d "$WALLPAPER_DIR" ]] && abort "Wallpaper directory not found: $WALLPAPER_DIR"

	local img
	img="$(choose_wallpaper)"
	[[ -n "$img" ]] && apply_wallpaper "$img"
}

cmd_restore() {
	[[ -f "$WALLPAPER_FILE" ]] || abort "No saved wallpaper found."
	local saved_wallpaper
	saved_wallpaper="$(cat "$WALLPAPER_FILE")"
	[[ -f "$saved_wallpaper" ]] || abort "Saved wallpaper no longer exists: $saved_wallpaper"
	apply_wallpaper "$saved_wallpaper"
}

cmd_version() {
	echo "$SCRIPT_NAME version $SCRIPT_VERSION"
}

# ===================================
# MAIN LOGIC
# ===================================
main() {
	local cmd="${1:-}"
	shift || true

	case "$cmd" in
	set) cmd_set "$@" ;;
	choose) cmd_choose ;;
	restore) cmd_restore ;;
	version) cmd_version ;;
	help | "") cmd_help ;;
	*) abort "Unknown command: $cmd" ;;
	esac
}

main "$@"
