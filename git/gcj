#!/usr/bin/env bash

set -euo pipefail

print_help() {
  cat <<EOF
Usage:
  $0 <command> [options]

Commands:
  commit              Commit and push immediately
  schedule            Schedule commit via cron

Options:
  --repo <PATH>       Path to the Git repository (required)
  --message <MSG>     Commit message (required)
  --time <HH:MM>      Time to schedule (24h format, required for schedule)
  --date <DATE>       Date (today, tomorrow, or YYYY-MM-DD; default: tomorrow)
  -h, --help          Show this help message
EOF
  exit 1
}

commit_and_push() {
  local repo_path="$1"
  local message="$2"

  [[ ! -d "$repo_path/.git" ]] && {
    echo "‚ùå Error: Not a valid Git repository: $repo_path"
    exit 1
  }

  git -C "$repo_path" add .
  git -C "$repo_path" commit -m "$message"
  git -C "$repo_path" push
  echo "‚úÖ Commit and push completed at \$(date '+%F %T')"
}

schedule_commit() {
  local time="$1" date="$2" repo="$3" msg="$4"

  [[ "$date" == "today" ]] && date=$(date +%F)
  [[ "$date" == "tomorrow" || -z "$date" ]] && date=$(date -d tomorrow +%F)

  [[ ! "$time" =~ ^[0-9]{2}:[0-9]{2}$ ]] && {
    echo "‚ùå Invalid time format. Use HH:MM."
    exit 1
  }

  [[ ! "$date" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]] && {
    echo "‚ùå Invalid date format. Use today, tomorrow, or YYYY-MM-DD."
    exit 1
  }

  [[ ! -d "$repo/.git" ]] && {
    echo "‚ùå Not a valid Git repository: $repo"
    exit 1
  }

  local hour="${time%%:*}"
  local minute="${time##*:}"
  local day month
  day=$(date -d "$date" +%d)
  month=$(date -d "$date" +%m)
  local script_path=$(realpath "$0")

  (
    crontab -l 2>/dev/null
    echo "$minute $hour $day $month * \"$script_path\" commit --repo \"$repo\" --message \"$msg\""
  ) | crontab -

  echo "üìÖ Scheduled commit on $date at $time for repo: $repo"
}

main() {
  local cmd="${1:-}"
  shift || true

  local repo=""
  local message=""
  local time=""
  local date=""

  while [[ $# -gt 0 ]]; do
    case "$1" in
      --repo)
        shift
        repo="$1"
        ;;
      --message)
        shift
        message="$1"
        ;;
      --time)
        shift
        time="$1"
        ;;
      --date)
        shift
        date="$1"
        ;;
      -h|--help)
        print_help
        ;;
      *)
        echo "Unknown option: $1"
        print_help
        ;;
    esac
    shift
  done

  [[ -z "$repo" || -z "$message" ]] && print_help

  case "$cmd" in
    commit)
      commit_and_push "$repo" "$message"
      ;;
    schedule)
      [[ -z "$time" ]] && echo "‚ùå --time is required for schedule" && exit 1
      schedule_commit "$time" "$date" "$repo" "$message"
      ;;
    *)
      echo "Unknown command: $cmd"
      print_help
      ;;
  esac
}

main "$@"